<html>

  <div id="fakebox" style="color: white;overflow-y: hidden;overflow-x: hidden;position: absolute; transform: translate(50%, 50%); border-style: groove;">
    <div id="contain">
      <div id="start"style="width: 100%; display: flex; align-content: center; justify-content: center; flex-wrap: wrap;">
        <button onclick="start();">play</button>
      </div>
      <div id="name"style="display: none; width: 100%; justify-content: center; align-content: center; flex-wrap: wrap; flex-direction: column;">
        first name<input id="Fn" type="text"></input><br>
        last name<input id="Ln" type="text"></input><br>
        Student Email<input id="mail" type="text"></input><br>
        <button onclick="next()">next</button>
      </div>
      <div id="choice" style="display: none; width: 100%; align-content: center; flex-wrap: wrap; justify-content: space-evenly;">
        <button onclick="play('a')">computer</button>
        <button onclick="play('b')">database</button>
        <button onclick="play('c')">Hard disk drive</button>
      </div>
      <div id="gameWindow"style="display: none;flex-direction: column;">
        <img id="gameGif" src="" style="display: flex; align-self: center;">
        <img src="https://thumbs.gfycat.com/AridDigitalGibbon-max-1mb.gif" id="atkMc" style="display: none;">
        <img src="https://thumbs.gfycat.com/AridDigitalGibbon-max-1mb.gif" id="atkBad" style="display: none;">
        <div id="missTxtBAD">miss</div>
        <div id="missTxtMC">miss</div>
        <div class="stat" style="top: 37%; left: 11%;">
            <div id="nameMc"> name of mc </div>
            <div style="width: 284px; height: 5px; background: #0e2c29; border: outset; ">
              <div id="hpBarMC" style="width: 284;"></div>
              <div id="hpBarMCred" style="background: red;width: 284;transition-duration: 2s;"></div>
            </div>
            <div id="hpMc">
              284/284
            </div>
        </div>

        <div class="stat" style="top: 1%; right: 11%;">
          <div id="nameBad"> badguy </div>
          <div style="width: 284px; height: 5px; background: #0e2c29; border: outset; ">
            <div id="hpBarBad" style="width: 284;"></div>
            <div id="hpBarBadred" style="background: red;width: 284;transition-duration: 2s;"></div>
          </div>
          <div id="hpBad">
            284/284
          </div>
        </div>


        <div style="display: flex;flex-direction: column; margin: 5%;";>
          <div id="questions" style="margin: 6px;width: 532px;"> awefre  esrf ser  esrf?</div>
            <div id="answer">
              <div id="blockAns" style="display: none; background: linear-gradient(14deg, rgb(249 185 154 / 36%), rgba(255, 0, 0, 0)); width: 100%; height: 100%; left: 0px; bottom: 0px; position: absolute;"></div>
              <div class="ansBtn" onclick="ANSinput('a')">
                <div class="qu";>a)</div><div style="margin-left: 16px;"id="a-"></div>
              </div>

              <div class="ansBtn" onclick="ANSinput('b')">
                <div class="qu";>b)</div><div style="margin-left: 16px;" id="b-"></div>
              </div>

              <div class="ansBtn" onclick="ANSinput('c')">
                <div class="qu";>c)</div><div style="margin-left: 16px;" id="c-"></div>
              </div>

              <div class="ansBtn" onclick="ANSinput('d')">
                <div class="qu";>d)</div><div style="margin-left: 16px;" id="d-"></div>
              </div>
            </div>
            <div id="options">
            </div>
        </div>
      </div>
      <div id="endScreen"style="display: none;">
        <button>back to menu</button>
      </div>
    </div>
  </div>
  
<style>
#contain{
  background: #00000078;
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap;
}
#fakebox{
  width: 700px;height: 660px;
}
.qu{
  width: 25%;
}
#gameGif{
  width: 80%;
  
}
#atkMc{
  position: absolute;
  width: 89px;
  top: 166px;
  ;
  left: 207px;
  transition-delay: 2s;
  background: radial-gradient(closest-side,#ff0000a8, #ffffff00);
}
#atkBad{
  position: absolute;
  width: 89px;
  top: 98px;
  right: 235px;
  transition-delay: 2s;
  background: radial-gradient(closest-side,#ff0000a8, #ffffff00);
}
#missTxtBAD{ 
  animation: fadeIn 1s; 
  position: absolute;
  font-family: 'Verdana', sans-serif;
  text-shadow: 0 0 black;
  display: none;
  text-shadow: -1px 1px black;
  background: radial-gradient(closest-side,#476374, #ffffff00);
  top: 32%;
  left: 43%;

}#missTxtMC{ 
  animation: fadeIn 1s; 
  position: absolute;
  font-family: 'Verdana', sans-serif;
  text-shadow: 0 0 black;
  display: none;
  text-shadow: -1px 1px black;
  background: radial-gradient(closest-side,#476374, #ffffff00);
  top: 24%;
  left: 50%;
  }@keyframes fadeIn {
  0% { opacity: 0; }
  25% { opacity: 1; }
  100% { opacity: 0; }
}
#game{
  padding-bottom: 12%;
  display: flex;
  align-content: center;
  flex-wrap: wrap;
  background: #00000078;
  flex-direction: column;
  height: -webkit-fill-available;
}
.ansBtn{
  transition-duration: 0.4s;
  background: linear-gradient(45deg, #ff81007a, transparent);
  outline: solid;
  margin-bottom: 9px;
}
.ansBtn:hover{
  background: linear-gradient(45deg, #ff81007a, #ffe7ce7a);
}
.stat{
  position: absolute;
  width: 289px;
  height: 50px;
  background: #00000063;
  padding: 1%;
}
#answer{
  width: 100%;
}

#hpBarMc{
    height: 5px;
    position: absolute;
    z-index: 5;
    background: #8fdd75;
    transition-duration: 0.2s;
}
#hpBarMcred{
    height: 5px;
    z-index: 2;
    position: absolute;
    transition-duration: 3.4s;
}

#hpBarBad{
    height: 5px;
    position: absolute;
    background: #8fdd75;
    z-index: 5;
    transition-duration: 0.2s;
}
#hpBarBadred{
    height: 5px;
    z-index: 2;
    position: absolute;
    transition-duration: 3.4s;
}
</style>

<script>
  const dbMC   ="https://cdn.discordapp.com/attachments/844117240520638494/1124638682700316672/bg.gif"
  const compMC ="https://cdn.discordapp.com/attachments/907224443644960828/1124708027866566687/db.gif"
  const hdMC   ="https://cdn.discordapp.com/attachments/907224443644960828/1124857100888182865/Hard-disk-drive.gif"

  var mc=""
  StartScreen=document.getElementById("start");
  nameScreen=document.getElementById("name");
  choiceScreen=document.getElementById("choice");
  gameScreen=document.getElementById("gameWindow");
  endScreen=document.getElementById("endScreen");
  function start() {
    StartScreen.style.display="none"
    nameScreen.style.display="flex"

  }   
  var fName="" 
  var Lname=""
  var mail=""
  function next() {
    if(document.getElementById("Fn").value==""||document.getElementById("Ln").value==""||document.getElementById("mail").value==""){
      alert("please fill in the fields")
    }else{
      nameScreen.style.display="none";
      choiceScreen.style.display="flex";
      fName=document.getElementById("Fn").value;
      Lname=document.getElementById("Ln").value;
      mail=document.getElementById("mail").value;
    }

  }
  var questionOn=1;
  var studentAns=[]
  var anwensers={
    1:"b",
    2:"b",
    3:"b",
    4:"b",
    5:"b",
    6:"b",
    7:"b",
    8:"b",
    9:"b",
    10:"b",
  }
  var questons={
    1:"From the following the Electronic databases cannot:",
    2:"Which of the following lists are in order from smallest to largest?",
    3:"Which data type in a database stores alphabetic characters?",
    4:"A field that contains unique data in every record is a:",
    5:"Layouts in forms and tables of a database are easily amended by:",
    6:"The most effective way of searching a large database is to:",
    7:"define data dictionary:",
    8:"The database feature that is used to rearrange data in alphabetical order is called:",
    9:"A business has created a database of its customers in Australia. The conditional part of the query to retrieve all customers in Sydney who are over 20 years of age would be:",
    10:"Which of the following is not a good design principle?  ",
  }
  var ansAs={
    1:"Search and sort data quickly",
    2:"Field, Character, Record",
    3:"Word",
    4:"Primary key",
    5:"Deleting a field",
    6:"Use a search or find command",
    7:"The process of arranging data in a parti- cular order.",
    8:"Searching",
    9:"City = ‘Sydney’ AND Age < 20",
    10:"Use layouts that present the information effectively.",
  }
  var ansBs={
    1:"Perform recalculations on data quickly and accurately",
    2:"Field, Record, Character",
    3:"Field",
    4:"Secondary key",
    5:"Constructing a query",
    6:"Print a report",
    7:"The kind of data in the field. ",
    8:"Copying",
    9:"City = ‘Sydney’ AND Age > 20",
    10:"Balance text on the page either vertically or horizontally.",
  }
  var ansCs={
    1:"Correct and update data",
    2:"Character, Field, Record",
    3:"Text",
    4:"Field key",
    5:"Designing a report",
    6:"Browse a table",
    7:"It is used to view, enter and change data in a table.",
    8:"Sorting",
    9:"City = ‘Sydney’ OR Age < 20",
    10:"Use a many different styles throughout a report.",
  }
  var ansDs={
    1:"Present data in a variety of ways",
    2:"Character, Field, Record",
    3:"Record",
    4:"Compound key",
    5:"Moving fields, Headings or Instructions",
    6:"Construct a query",
    7:"A collection of facts about one specific entry in a database.",
    8:"Organising",
    9:"City = ‘Sydney’ OR Age > 20",
    10:"Ensure Columns have clear and descriptive headings.",
  }
 
  rightAns=anwensers[questionOn]

  queston=questons[questionOn]
  document.getElementById("questions").innerHTML=queston

  ansA=ansAs[questionOn]
  document.getElementById("a-").innerHTML=ansA
  ansB=ansBs[questionOn]
  document.getElementById("b-").innerHTML=ansB
  ansC=ansCs[questionOn]
  document.getElementById("c-").innerHTML=ansC
  ansD=ansDs[questionOn]
  document.getElementById("d-").innerHTML=ansD

  function updateQ(){
    rightAns=anwensers[questionOn]
    queston=questons[questionOn]
    document.getElementById("questions").innerHTML=queston

    ansA=ansAs[questionOn]
    document.getElementById("a-").innerHTML=ansA
    ansB=ansBs[questionOn]
    document.getElementById("b-").innerHTML=ansB
    ansC=ansCs[questionOn]
    document.getElementById("c-").innerHTML=ansC
    ansD=ansDs[questionOn]
    document.getElementById("d-").innerHTML=ansD
  }



  function play(choice){
    choiceScreen.style.display="none"
    gameScreen.style.display="flex"
    mc=choice;
    if (mc=="a"){
      document.getElementById("gameGif").src=dbMC
      document.getElementById("nameMc").innerHTML="computer"

    }else if(mc=="b"){
      document.getElementById("gameGif").src=compMC 
      document.getElementById("nameMc").innerHTML="database"

    }else if(mc="c"){
      document.getElementById("gameGif").src=hdMC
      document.getElementById("nameMc").innerHTML="Hard disk drive"
    }
  }
  function stopInput(){
    document.getElementById("blockAns").style.display="flex"
    setTimeout(function(){
      document.getElementById("blockAns").style.display="none"
    },2000)
  }

  function ANSinput(ans){
    
    if(ans==rightAns){
      hitEnemy()
      studentAns.push(2)
    }else{
      missMC()
      studentAns.push(1)
    }
    stopInput()
    setTimeout(function(){
      hitMc()
    },1000);
    setTimeout(function(){
      nextQuestion()
    },2000)
    hpBarUpdate()
  }
  function nextQuestion(){
    mcHP=document.getElementById("hpBarMC").clientWidth
    badHP=document.getElementById("hpBarBad").clientWidth
    questionOn+=1;
    if(questionOn==11){
      console.log("end of game")
      addNameData(fName,Lname,mail)
      if(mcHP>badHP){
        endGame("you win","img")
      }else if(mcHP<badHP){
        endGame("you lose","img")
      }else{
        endGame("draw","img")
      }
      
    }
    updateQ();
  }



function hitMc(){
  randomHit=Math.floor(Math.random() * 3)
  if(randomHit==1){
    missBAD()
  }
  else{
    MChpW=document.getElementById("hpBarMC").clientWidth
    document.getElementById("atkMc").style.display="block";
    document.getElementById("hpBarMC").style.width=document.getElementById("hpBarMC").clientWidth-28;
    MChpW=document.getElementById("hpBarMC").clientWidth
    document.getElementById("hpMc").innerHTML= MChpW+"/284";
    if(MChpW<28){
      document.getElementById("hpBarMC").style.width=0;
      document.getElementById("hpMc").innerHTML="0/284";
    }
    setTimeout(function(){
      document.getElementById("atkMc").style.display="none"
    }, 500);
  }
  document.getElementById("hpBarMCred").style.width=document.getElementById("hpBarMC").style.width
}

function hitEnemy(){
  BadhpW=document.getElementById("hpBarBad").clientWidth
  document.getElementById("atkBad").style.display="block";
  document.getElementById("hpBarBad").style.width=BadhpW-28;
  BadhpW=document.getElementById("hpBarBad").clientWidth
  document.getElementById("hpBad").innerHTML= BadhpW+"/284";
  if(BadhpW<28){
    document.getElementById("hpBarBad").style.width=0;
    document.getElementById("hpBad").innerHTML="0/284";
  }
  setTimeout(function(){
    document.getElementById("atkBad").style.display="none";
  }, 500);
  document.getElementById("hpBarBadred").style.width=document.getElementById("hpBarBad").style.width
}

function endGame(msg,BG){
  console.log(msg)
  gameScreen.style.display="none"
  endScreen.style.display="block"
}
function missMC(){
  document.getElementById("missTxtMC").style.display="block"
  setTimeout(function(){
    document.getElementById("missTxtMC").style.display="none"
  },800)
}
function missBAD(){
  document.getElementById("missTxtBAD").style.display="block"
  setTimeout(function(){
    document.getElementById("missTxtBAD").style.display="none"
  },800)
}

function hpBarUpdate(){
  hpBarMC=document.getElementById("hpBarMC")
  hpBarBad=document.getElementById("hpBarBad")
  document.getElementById("hpBarMCred").style.width=document.getElementById("hpBarMC").style.width
  document.getElementById("hpBarBadred").style.width=document.getElementById("hpBarBad").style.width

  if(180<hpBarMC.clientWidth){
    //green
    hpBarMC.style.background="#8add75"
  }else if(180>hpBarMC.clientWidth){
    hpBarMC.style.background="#d0f531"
    //yellow
  }else if(50>hpBarMC.clientWidth){
    hpBarMC.style.background="red"
    //red
  }

  if(180<hpBarBad.clientWidth){
    //green
    hpBarBad.style.background="#8add75"
  }else if(180>hpBarBad.clientWidth){
    hpBarBad.style.background="#d0f531"
    //yellow
  }else if(100>hpBarBad.clientWidth){
    hpBarBad.style.background="red"
    //red
  }
}
function addNameData(first,last,mail){
    var date = new Date();
    var DateHandIn=date.getDate()+"/"+(date.getUTCMonth()+1)+"/"+date.getFullYear()
    var TimeHandIn=date.getHours()+":"+date.getMinutes()
    fetch('https://sheetdb.io/api/v1/iwfjuy2l8ablu', {
    method: 'POST',
    headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      data: [{// 2=wrong 1=right
            "First-name" : first,
            "Last-name" : last,
            "mail-":mail,
            "chapter-":"databases",
            "1-" : studentAns[0],
            "2-" : studentAns[1],
            "3-" : studentAns[2],
            "4-" : studentAns[3],
            "5-" : studentAns[4],
            "6-" : studentAns[5],
            "7-" : studentAns[6],
            "8-" : studentAns[7],
            "9-" : studentAns[8],
            "10-" : studentAns[9],
            "date-": DateHandIn,
            "time-":TimeHandIn
          }]
    })})
    .then((response) => response.json())
    .then((data) => console.log(data));
  }  
</script>

</html>
